//------------------------------------------------------------------------------
// @file: template.h
// @created on: April 23, 2020
// 
// LICENCE
//------------------------------------------------------------------------------

// IFNDEF ----------------------------------------------------------------------
#ifndef BUTTON_H_
#define BUTTON_H_

// DEFINES ---------------------------------------------------------------------

// INCLUDES --------------------------------------------------------------------

// FOWARD DECLARATIONS ---------------------------------------------------------

// NAMESPACES ------------------------------------------------------------------
namespace vibration_dispenser { namespace io {  

// FOWARD DECLARATIONS ---------------------------------------------------------

// ENUMS -----------------------------------------------------------------------

// STRUCTS ---------------------------------------------------------------------

// TYPEDEFS --------------------------------------------------------------------

// CLASS DECLARATION -----------------------------------------------------------
class Button {
public:

  // CONSTRUCTOR AND DESTRUCTOR ------------------------------------------------
  /**
   * Constructor
   * */
  Button();
  /**
   * Destructor
   * */
  ~Button();

  // FUNCTIONS -----------------------------------------------------------------
  /**
   * get button state   
   * @return true when 1, false when 0
   * */
  bool getState();
  
  // MEMBER GETTERS ------------------------------------------------------------
  int getTemplateValue() const;

  // MEMBER SETTERS ------------------------------------------------------------
  void setTemplateValue(const int &templateValue);
  
private:
  // FUNCTIONS -----------------------------------------------------------------
  void privateFunction();

  // MEMBERS -------------------------------------------------------------------
  bool state=false;
}; // End of class Template

// END OF NAMESPACES 
}}
#endif
